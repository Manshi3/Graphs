class Solution {
private:
    void dfs(vector<vector<int>> &image, int row, int col, int n, int m, int newcolor, int inicolor) {
        if(row < 0 || row >= n || col < 0 || col >= m || image[row][col] != inicolor) return;
        image[row][col] = newcolor;

        dfs(image, row-1, col, n, m, newcolor, inicolor);
        dfs(image, row+1, col, n, m, newcolor, inicolor);
        dfs(image, row, col+1, n, m, newcolor, inicolor);
        dfs(image, row, col-1, n, m, newcolor, inicolor);
    }
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int n = image.size();
        int m = image[0].size();
        int inicolor = image[sr][sc];
        if(inicolor == color) return image;
        dfs(image, sr, sc, n, m, color, inicolor);
        return image;
    }
};
